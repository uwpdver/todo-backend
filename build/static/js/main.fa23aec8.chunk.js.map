{"version":3,"sources":["TodoItem.js","TodoList.js","SearchBar.js","servers/fetch.js","servers/index.js","servers/todo.js","App.js","localState.js","index.js"],"names":["TodoItem","this","props","id","content","isChecked","onCheckChange","onDelete","className","type","checked","onChange","onClick","Component","defaultProps","PropTypes","string","isRequired","bool","func","TodoList","todos","onItemCheckChange","onItemDelete","map","todo","index","SearchBar","textValue","submitBtnText","onTextChange","onSubmit","value","fetch","config","url","data","opt","fetchOptons","method","headers","cache","credentials","mode","redirect","referrer","includes","JSON","stringify","window","baseUrl","then","res","a","status","Error","json","afterResponse","get","post","delete","patch","createFetchInstants","getAllItems","query","postNewItem","deleteItemById","patchItemIsCompleted","isCompleted","InputMode","converTodosResponse","reduce","acc","cur","push","todosById","App","handleOnTextChange","bind","handleOnSubmit","handleOnItemDelete","handleOnItemCheckChange","getAllItemsFromServers","addItem","searchByContent","handleSwitchInputModeBtnClick","state","localStorage","getItem","parse","error","console","log","loadState","filteredResult","inputMode","prevProps","prevState","serializedState","setItem","saveState","setState","servers","todoData","e","target","preventDefault","undefined","todosByIdCopied","filter","todoId","todosCopied","todoWillBeModify","todoIsChecked","listDataSource","role","aria-label","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.fa23aec8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class TodoItem extends Component {\r\n  render() {\r\n    const { id, content, isChecked, onCheckChange, onDelete } = this.props;\r\n    return (\r\n      <div\r\n        className={`todo__item-wrapper ${\r\n          isChecked ? \"todo__item-wrapper--checked\" : \"\"\r\n        }`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={isChecked}\r\n          onChange={() => onCheckChange(id)}\r\n        />\r\n        <div className=\"todo__item-cotent\">{content}</div>\r\n        <button className=\"todo__delete-btn\" onClick={() => onDelete(id)}>\r\n          x\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTodoItem.defaultProps = {\r\n  content: \"\",\r\n  isChecked: false,\r\n  onCheckChange: () => {},\r\n  onDelete: () => {}\r\n};\r\n\r\nexport const TodoItemPropTypes = {\r\n  content: PropTypes.string.isRequired,\r\n  isChecked: PropTypes.bool.isRequired,\r\n  onCheckChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nTodoItem.propTypes = TodoItemPropTypes;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nexport default class TodoList extends Component {\r\n  render() {\r\n    const { todos, onItemCheckChange, onItemDelete } = this.props;\r\n    return (\r\n      <div>\r\n        {todos.map((todo, index) => (\r\n          <TodoItem\r\n            key={todo.id}\r\n            id={todo.id}\r\n            content={todo.content}\r\n            isChecked={todo.isChecked}\r\n            onCheckChange={onItemCheckChange}\r\n            onDelete={onItemDelete}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTodoList.defaultProps = {\r\n  todos: [],\r\n  onItemCheckChange: () => {},\r\n  onItemDelete: () => {}\r\n};\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  onItemCheckChange: PropTypes.func.isRequired,\r\n  onItemDelete: PropTypes.func.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class SearchBar extends Component {\r\n  render() {\r\n    const { textValue, submitBtnText, onTextChange, onSubmit } = this.props;\r\n    return (\r\n      <form onSubmit={onSubmit} className=\"searchbar\">\r\n        <input\r\n          className=\"searchbar__text-input\"\r\n          type=\"text\"\r\n          value={textValue}\r\n          onChange={onTextChange}\r\n        />\r\n        <button type=\"submit\" className=\"searchbar__submit-btn\">\r\n          {submitBtnText}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.defaultProps = {\r\n  textValue: \"\",\r\n  submitBtnText: \"add\",\r\n  onTextChange: () => {},\r\n  onSubmit: () => {}\r\n};\r\n\r\nexport const TodoItemPropTypes = {\r\n  textValue: PropTypes.string.isRequired,\r\n  submitBtnText: PropTypes.string.isRequired,\r\n  onTextChange: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired\r\n};\r\n\r\nSearchBar.propTypes = TodoItemPropTypes;\r\n","const createFetchInstants = (config = {}) => {\r\n  const fetch = (url, data, opt) => {\r\n    const fetchOptons = {\r\n      method: opt.method, // *GET, POST, PUT, DELETE, etc.\r\n      headers: config.headers,\r\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: 'same-origin', // include, same-origin, *omit\r\n      headers: {\r\n        'user-agent': 'Mozilla/4.0 MDN Example',\r\n        'content-type': 'application/json'\r\n      },\r\n      mode: 'cors', // no-cors, cors, *same-origin\r\n      redirect: 'follow', // manual, *follow, error\r\n      referrer: 'no-referrer', // *client, no-referrer\r\n      ...config\r\n    }\r\n\r\n    const method = config?.headers?.method || opt.method\r\n    if (!['GET', 'DELETE'].includes(method)) {\r\n      fetchOptons['body'] = JSON.stringify(data)\r\n    }\r\n\r\n    return window.fetch(`${config.baseUrl || \"\"}${url}`, fetchOptons)\r\n      .then(\r\n        async (res) => {\r\n          if (res.status > 299 || res.status < 200) {\r\n            throw new Error('请求错误')\r\n          }\r\n\r\n          const json = await res.json()\r\n          if (typeof config.afterResponse === \"function\") {\r\n            return config.afterResponse(json)\r\n          } else {\r\n            return json\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  return {\r\n    get(url, opt = {}) {\r\n      return fetch(url, null, { method: 'GET', ...opt })\r\n    },\r\n    post(url, data, opt = {}) {\r\n      return fetch(url, data, { method: 'POST', ...opt })\r\n    },\r\n    delete(url, opt = {}) {\r\n      return fetch(url, null, { method: 'DELETE', ...opt })\r\n    },\r\n    patch(url, data, opt = {}) {\r\n      return fetch(url, data, { method: 'PATCH', ...opt })\r\n    },\r\n  }\r\n}\r\n\r\nconst fetchConfig = {\r\n  baseUrl: '/api',\r\n  afterResponse: res => {\r\n    return res.data\r\n  },\r\n}\r\n\r\nconst fetch = createFetchInstants(fetchConfig)\r\n\r\nexport default fetch;","import todo from './todo'\r\n\r\nexport default {\r\n  todo\r\n};","import fetch from './fetch';\r\n\r\nexport default {\r\n  getAllItems(query='') {\r\n    return fetch.get(`/items?${query}`)\r\n  },\r\n  postNewItem({ content }) {\r\n    return fetch.post(`/items`, { content: content })\r\n  },\r\n  deleteItemById(id) {\r\n    return fetch.delete(`/items/${id}`)\r\n  },\r\n  patchItemIsCompleted({id, isCompleted}) {\r\n    return fetch.patch(`/items/${id}/isCompleted`, {isCompleted: isCompleted})\r\n  },\r\n};","import React, { Component } from \"react\";\r\nimport \"./styles.css\";\r\nimport TodoList from \"./TodoList\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport { loadState, saveState } from \"./localState\";\r\nimport servers from './servers'\r\n\r\nconst InputMode = {\r\n  add: 0,\r\n  search: 1\r\n};\r\n\r\nconst converTodosResponse = (res) => {\r\n  return res.reduce((acc, cur) => {\r\n    acc.todos.push(cur.id);\r\n    acc.todosById[cur.id] = {\r\n      ...cur,\r\n      isChecked: cur.isCompleted\r\n    };\r\n    return acc;\r\n  }, {\r\n    todos: [],\r\n    todosById: {}\r\n  });\r\n}\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleOnTextChange = this.handleOnTextChange.bind(this);\r\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\r\n    this.handleOnItemDelete = this.handleOnItemDelete.bind(this);\r\n    this.handleOnItemCheckChange = this.handleOnItemCheckChange.bind(this);\r\n    this.getAllItemsFromServers = this.getAllItemsFromServers.bind(this);\r\n    this.addItem = this.addItem.bind(this);\r\n    this.searchByContent = this.searchByContent.bind(this);\r\n    this.handleSwitchInputModeBtnClick = this.handleSwitchInputModeBtnClick.bind(\r\n      this\r\n    );\r\n    this.state = loadState() || {\r\n      todos: [],\r\n      todosById: {\r\n\r\n      },\r\n      textValue: \"\",\r\n      filteredResult: [],\r\n      inputMode: InputMode.add,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllItemsFromServers()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state !== prevState) {\r\n      saveState(this.state);\r\n      if (\r\n        this.state.inputMode !== prevState.inputMode &&\r\n        prevState.inputMode === InputMode.search\r\n      ) {\r\n        this.setState({\r\n          filteredResult: []\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  async getAllItemsFromServers() {\r\n    try {\r\n      const res = await servers.todo.getAllItems()\r\n      const todoData = converTodosResponse(res);\r\n      this.setState({ ...todoData })\r\n    } catch (error) {\r\n      // ignore error      \r\n    }\r\n  }\r\n\r\n  handleSwitchInputModeBtnClick() {\r\n    const { inputMode } = this.state;\r\n    this.setState({\r\n      inputMode: inputMode === InputMode.add\r\n        ? InputMode.search\r\n        : InputMode.add\r\n    });\r\n  }\r\n\r\n  handleOnTextChange(e) {\r\n    this.setState({ textValue: e.target.value });\r\n  }\r\n\r\n  async addItem() {\r\n    const { textValue, todos, todosById } = this.state;\r\n    try {\r\n      const res = await servers.todo.postNewItem({ content: textValue })\r\n      this.setState({\r\n        todos: [res.id, ...todos],\r\n        todosById: {\r\n          ...todosById,\r\n          [res.id]: {\r\n            ...res,\r\n            isChecked: res.isCompleted\r\n          }\r\n        },\r\n        textValue: \"\"\r\n      });\r\n    } catch (error) {\r\n      // error handle\r\n    }\r\n  }\r\n\r\n  async searchByContent() {\r\n    const { textValue, todosById } = this.state;\r\n    try {\r\n      const res = await servers.todo.getAllItems(`keyword=${textValue}`);\r\n      const todoData = converTodosResponse(res);\r\n      this.setState({\r\n        filteredResult: todoData.todos,\r\n        todosById: {\r\n          ...todosById,\r\n          ...todoData.todosById\r\n        },\r\n        textValue: \"\"\r\n      })\r\n    } catch (error) {\r\n      // ignore error\r\n    }\r\n  }\r\n\r\n  async handleOnSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const { textValue, inputMode } = this.state;\r\n\r\n    if (!textValue) {\r\n      this.setState({ textValue: '' })\r\n      return undefined;\r\n    }\r\n\r\n    if (inputMode === InputMode.add) {\r\n      this.addItem();\r\n    } else {\r\n      this.searchByContent();\r\n    }\r\n  }\r\n\r\n  async handleOnItemDelete(id) {\r\n    const { todosById, todos, filteredResult } = this.state;\r\n    try {\r\n      await servers.todo.deleteItemById(id);\r\n      const todosByIdCopied = { ...todosById };\r\n      delete todosByIdCopied[id];\r\n      this.setState({\r\n        todos: todos.filter(todoId => todoId !== id),\r\n        todosById: todosByIdCopied,\r\n        filteredResult: filteredResult.filter(todoId => todoId !== id),\r\n      });\r\n    } catch (error) {\r\n      // ignore error\r\n    }\r\n  }\r\n\r\n  async handleOnItemCheckChange(id) {\r\n    const { todosById } = this.state;\r\n    const todosCopied = { ...todosById };\r\n    const todoWillBeModify = todosCopied[id];\r\n    const todoIsChecked = todosCopied[id].isChecked;\r\n    try {\r\n      await servers.todo.patchItemIsCompleted({ id: id, isCompleted: !todoIsChecked });\r\n      todoWillBeModify.isChecked = !todoIsChecked;\r\n      this.setState({ todosById: todosCopied });\r\n    } catch (error) {\r\n      // ignore error\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      textValue,\r\n      todos,\r\n      filteredResult,\r\n      inputMode,\r\n      todosById\r\n    } = this.state;\r\n    const submitBtnText = inputMode === InputMode.add ? \"add\" : \"search\";\r\n    const {\r\n      handleOnTextChange,\r\n      handleOnSubmit,\r\n      handleOnItemDelete,\r\n      handleOnItemCheckChange,\r\n      handleSwitchInputModeBtnClick\r\n    } = this;\r\n\r\n    const listDataSource = (\r\n      inputMode === InputMode.add\r\n        ? todos\r\n        : filteredResult\r\n    ).map(todoId => todosById[todoId]);\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"page-header\">\r\n          <div className=\"page-title\">Todo</div>\r\n          <button\r\n            className=\"header__switch-input-mode-btn\"\r\n            onClick={handleSwitchInputModeBtnClick}\r\n          >\r\n            <span role=\"img\" aria-label=\"search\">\r\n              {inputMode === InputMode.add ? \"🔍\" : \"➕\"}\r\n            </span>\r\n          </button>\r\n        </div>\r\n        <SearchBar\r\n          textValue={textValue}\r\n          onSubmit={handleOnSubmit}\r\n          submitBtnText={submitBtnText}\r\n          onTextChange={handleOnTextChange}\r\n        />\r\n        <TodoList\r\n          todos={listDataSource}\r\n          onItemCheckChange={handleOnItemCheckChange}\r\n          onItemDelete={handleOnItemDelete}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const loadState = () => {\r\n  const state = localStorage.getItem(\"state\");\r\n  try {\r\n    return JSON.parse(state);\r\n  } catch (error) {\r\n    // ignore error hanlde\r\n    console.log(error);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (error) {\r\n    // ignore error hanlde\r\n  }\r\n};\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}